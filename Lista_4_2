# rozumiem to zadanie na dwa sposoby
# 1 wybieram Lisc i do niego generuje nowe drzewo
# 2 biore wierzcholek i zachowujac strukture tworze poddrzewo


def drzewo_binarne():
# rozumiem to zadanie na dwa sposoby
# 1 wybieram Lisc i do niego generuje nowe drzewo
# 2 biore wierzcholek i zachowujac strukture tworze poddrzewo


def drzewo_binarne():

    class Node:
        # wezel binarny

        def __init__(self, data=None, left=None, right=None):
            self.data = data
            self.left = left
            self.right = right

        def __str__(self):
            return str(self.data)

    def traverse_preorder(top):
        if top is None:
            return
        print(top)
        traverse_preorder(top.left)
        traverse_preorder(top.right)

    root = Node(1)
    root.left = Node(2)
    root.right = Node(3)
    root.left.left = Node(4)
    root.left.right = Node(5)
    root.right.left = Node(6)
    root.right.right = Node(7)

    traverse_preorder(root)  # sprawdzenie drzewa

    class Node:
        # wezel binarny

        def __init__(self, data=None, left=None, right=None):
            self.data = data
            self.left = left
            self.right = right

        def __str__(self):
            return str(self.data)

    def traverse_preorder(top):
        if top is None:
            return
        print(top)
        traverse_preorder(top.left)
        traverse_preorder(top.right)

    root = Node(1)
    root.left = Node(2)
    root.right = Node(3)
    root.left.left = Node(4)
    root.left.right = Node(5)
    root.right.left = Node(6)
    root.right.right = Node(7)

    traverse_preorder(root)  # sprawdzenie drzewa
